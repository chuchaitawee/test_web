@*@model TestWeb.Models.tbl_test*@
@*@model IEnumerable<TestWeb.Models.tbl_test>*@

@model TestWeb.Models.ResultViewModel

@{
    ViewBag.Title = "Home Page";
}

@section Styles{
    @*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.css" />
        <link rel="stylesheet" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css" />*@
}


@* modal *@
<div class="modal fade" id="modal-create" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form id="frm-data">
                    <div class="row" style="">
                        <div class="col-md-12">
                            <label>txtName</label>
                            <input name="txtName" value="ชูชัย" class="form-control" />
                        </div>

                        <div class="col-md-12">
                            <label>txtLastname</label>
                            <input name="txtLastname" value="ทวี" class="form-control" />
                        </div>

                        <div class="col-md-12">
                            <label>txtEmail</label>
                            <input name="txtEmail" value="test@mail.com" class="form-control" />
                        </div>
                    </div>


                    <div class="row" style="">
                        <div class="col-md-6">
                            <div class="form-check">
                                <input type="checkbox" name="chkList" value="a1" class="form-check-input" checked>
                                <label class="form-check-label" for="">
                                    checkbox1
                                </label>
                            </div>
                            <div class="form-check">
                                <input type="checkbox" name="chkList" value="a2" class="form-check-input" checked>
                                <label class="form-check-label" for="">
                                    checkbox2
                                </label>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-check">
                                <input type="checkbox" name="chkList2[]" value="a3" class="form-check-input" checked>
                                <label class="form-check-label" for="">
                                    checkbox1
                                </label>
                            </div>
                            <div class="form-check">
                                <input type="checkbox" name="chkList2[]" value="a4" class="form-check-input" checked>
                                <label class="form-check-label" for="">
                                    checkbox2
                                </label>
                            </div>
                        </div>

                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="insert_data()" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-edit" tabindex="-1" aria-labelledby="" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form id="frm-edit">
                    <div class="row" style="">
                        <div class="col-md-12">
                            <label>txtName</label>
                            <input name="txtName" class="form-control" />
                        </div>

                        <div class="col-md-12">
                            <label>txtLastname</label>
                            <input name="txtLastname" class="form-control" />
                        </div>

                        <div class="col-md-12">
                            <label>txtEmail</label>
                            <input name="txtEmail" class="form-control" />
                        </div>
                    </div>

                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="insert_data()" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

@*datatable*@
<div class="row" style="margin-top:1em">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">

                @Html.AntiForgeryToken()

                <button id="btn-refresh" class="btn btn-secondary" title="Refresh">
                    <i class="fas fa-sync"></i>
                </button>

                <button id="btn-create" class="btn btn-primary" title="Create" data-bs-toggle="modal" data-bs-target="#modal-create">
                    @* *@
                    <i class="fas fa-plus"></i>
                </button>
                <hr />

                <table class="table table-bordered" id="tbl-test">
                    <thead class="text-center">
                        <tr>
                            <th>#</th>
                            <th>name</th>
                            <th>lastname</th>
                            <th>email</th>
                            <th>ac</th>
                        </tr>
                    </thead>

                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@*table*@
<div class="row" style="margin-top:1em">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">

                <table class="table table-bordered" id="">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>name</th>
                            <th>lastname</th>
                            <th>email</th>
                            <th>email</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model._tbl_test)
                        {
                            <tr>
                                <td>#</td>
                                <td>@Html.DisplayFor(modelItem => item.name)</td>
                                <td>@Html.DisplayFor(modelItem => item.lastname)</td>
                                <td>@item.email</td>

                                <td>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-body">

                <table class="table table-bordered" id="">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>name</th>
                            <th>lastname</th>
                            <th>action</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model._tbl_member)
                        {
                            <tr>
                                <td>#</td>
                                <td>@Html.DisplayFor(modelItem => item.name)</td>
                                <td>@Html.DisplayFor(modelItem => item.lastname)</td>

                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.member_id }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.member_id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@*api*@
<div class="row" style="margin-top:1em">
    <div class="col-md-12">

        <div class="card">
            <div class="card-body">
                <button onclick="test_api()" class="btn btn-success">fetch_api</button>
                <button onclick="test_api2()" class="btn btn-success">ajax</button>
                <button onclick="test_api3()" class="btn btn-success">async await</button>
                <hr />

                <table id="tbl-api" class="table">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>name</th>
                            <th>email</th>
                            <th>body</th>
                        </tr>
                    </thead>

                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
    //const siteRoot = window.location.pathname.split('/');
    //const secondLevelLocation = siteRoot[1];
    //const req = location.host.includes('localhost') ? '' : '/' + secondLevelLocation; //
    //const url = location.host.includes('localhost') ?location.host :'/' + secondLevelLocation;
    //console.log();
/* datatable */
    var tbl_test;

    $(document).ready(function () {
        tbl_test = $(`#tbl-test`).DataTable({
            destroy: true,
            processing: true,
            serverSide: true,
            // ordering: true,
            order: [], //[ 1, false ]
            iDisplayLength: 10,
            aLengthMenu: [
                [10, 20, 30, 50, -1],
                [10, 20, 30, 50, "ทั้งหมด"]
            ],
            language: {
                // search: ""
            },

            ajax: {
                type: `post`,
                //url: `https://jsonplaceholder.typicode.com/comments`,
                //dataType: `json`,
                url: `@Url.Action("GetDataTable", "Home")`,
                data: function (d) {
                    d.test_param1 = 11;
                    d.test_param2 = 22;
                    console.log(d);
                },
            },

            columns: [
                { data: 'id', className: 'text-center', searchable: false, orderable: false },
                { data: 'name', name:'cvbcb55'},
                { data: 'lastname' },
                { data: 'email' },
                { data: 'id', className:'text-center', searchable:false, orderable:false },
            ],
            columnDefs: [
                {
                    targets: 0,

                    render: function (data, type, row, meta) {
                        // console.log(meta);
                        return (meta.row + meta.settings._iDisplayStart + 1);
                    }
                },

                {
                    targets: -1,

                    render: function (data, type, row, meta) {
                        return `
                            <a href="javascript:void(0)" class="btn-edit" title="แก้ไขข้อมูล">
                                <i class="fa fa-edit"></i>
                            </a>

                            <a href="javascript:void(0)" class="btn-delete" title="ลบข้อมูล">
                                <i class="fa fa-trash-alt"></i>
                            </a>
                         `;
                        // href=" url('setting/${data}') "
                    }
                }
            ],

        });
    });

    $(`#btn-refresh`).click(function () {
        tbl_test.ajax.reload();
    })

/* insert */
    function insert_data() {
        var form_data = new FormData($('#frm-data')[0]);
        for(let [name, value] of form_data) {
            console.log(`${name} = ${value}`);
        }
        //return false;

        $.ajax({
            type: `post`,
            url: `@Url.Action("InsertData", "Home")`, //${ req }/Choice/TestSave
            data: form_data,
            // mimeType: "multipart/form-data",
            dataType:'JSON',
            contentType: false,
            processData: false,
            success: function (resp) {
                console.log(resp);
                alert(resp.msg);

                $(`#modal-create`).modal(`hide`);
                tbl_test.ajax.reload();
            }
        });
    }

/* delete */
    $(`#tbl-test`).on("click", ".btn-delete", function () {
        var data_ = tbl_test.row( $(this).parents('tr') ).data();
        // console.log(data_);
        // return false;

        if (confirm(`${data_.id}`)) {
            $.ajax({
                type: `post`,
                url: `@Url.Action("DeleteData", "Home")`, //${ req }/Choice/TestSave
                data: { __RequestVerificationToken : $(`input[name="__RequestVerificationToken"]`).val(), user_id:data_.id },
                success: function (resp) {
                    console.log(resp);
                    alert(resp.msg);
                    tbl_test.ajax.reload();
                }
            });
        }
    });

/* update */
    $(`#tbl-test`).on("click", ".btn-edit", function () {
        var data_ = tbl_test.row( $(this).parents('tr') ).data();
        // console.log(data_);
        // return false;
        $(`#modal-edit input[name="txtName"]`).val(data_.name);
        $(`#modal-edit input[name="txtLastname"]`).val(data_.lastname);
        $(`#modal-edit input[name="txtEmail"]`).val(data_.email);
        $(`#modal-edit`).modal(`show`);

        @*if (confirm(`${data_.id}`)) {
            $.ajax({
                type: `post`,
                url: `@Url.Action("EditData", "Home")`, //${ req }/Choice/TestSave
                data: { __RequestVerificationToken : $(`input[name="__RequestVerificationToken"]`).val(), user_id:data_.id },
                success: function (resp) {
                    console.log(resp);
                    //tbl_test.ajax.reload();
                }
            });
        }*@
    });


/* test api */
    var url_ = `https://jsonplaceholder.typicode.com/comments`;
    const tbody = document.querySelector("#tbl-api tbody");

    // empty table
    function empty_data(param) {
        $(param).empty();
    }
    // swal_loading
    function swal_loading() {
        Swal.fire({
            title: 'กำลังโหลดข้อมูล',
            text: 'กรุณารอสักครู่...',
            showConfirmButton: false,
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading()
                // const b = Swal.getHtmlContainer().querySelector('b')
                // timerInterval = setInterval(() => {
                //   b.textContent = Swal.getTimerLeft()
                // }, 5)
            },
            // willClose: () => {
            //   clearInterval(timerInterval)
            // }
        });
    }
    // each_data
    function each_data(object) {

        return object.forEach(
            ele => tbody.innerHTML +=
                `<tr>
                    <td>${tbody.children.length + 1}</td>
                    <td>${ele.name}</td>
                    <td>${ele.email}</td>
                    <td>${ele.body}</td>
                </tr>`
        );
    }


    // fetch
    function test_api() {
        fetch(url_)
            .then(function (resp) {
                empty_data(`#tbl-api tbody`);
                swal_loading();
                return resp.json() // แปลงข้อมูลที่ได้เป็น json
            })
            .then(function (data1) {
                // const tbody = document.querySelector(".table tbody");
                console.log(data1);

                each_data(data1);

                swal.close();
            })
    }

    // ajax
    function test_api2() {
        $.ajax({
            url: url_,
            // type: "get",
            dataType: 'json',
            // mimeType: "multipart/form-data",
            contentType: false,
            cache: false, // ช้า
            processData: false,
            beforeSend: function () {
                empty_data(`#tbl-api tbody`);
                swal_loading();
            },
            success: function (data, textStatus, jqXHR) {
                each_data(data);
                swal.close();
            },
            error: function (resp, textStatus, jqXHR) {
                swal.close();
            },
        });
    }

    // async await
    async function get_user() {
        let res = await fetch(url_);
        console.log(res);
        let data3 = await res.json();
        return data3;
    }

    function test_api3() {
        empty_data(`#tbl-api tbody`);
        swal_loading();
        // var aa = get_user().data2;
        get_user().then(
            data3 => each_data(data3)
            //data3.forEach(
            //    data2 => $(`#tbl-api tbody`).append(`<tr>
            //                <td>${data2.id}</td>
            //                <td>${data2.name}</td>
            //                <td>${data2.email}</td>
            //                <td>${data2.body}</td>
            //              </tr>`)
        ).then(
            swal.close()
        );
    }
    //
    </script>
}
